#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MOUSE 4
#define SCROLL 5
#define NUM 6

&mt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

&lt {
    flavor = "balanced";
    quick-tap-ms = <300>;
};

/ {
    combos { compatible = "zmk,combos"; };

    macros {
        to_layer_0: to_layer_0 {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings = <&to 0 &macro_param_1to1 &kp MACRO_PLACEHOLDER>;
            label = "TO_LAYER_0";
        };
    };

    behaviors {
        lt_to_layer_0: lt_to_layer_0 {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP_TO_0";
            bindings = <&mo>, <&to_layer_0>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB           &kp Q  &kp W         &kp E             &kp R             &kp T                                      &kp Y        &kp U  &lt 5 I      &kp O       &lt 6 P          &kp MINUS
&kp LEFT_CONTROL  &kp A  &kp S         &kp D             &kp F             &kp G                                      &kp H        &kp J  &kp K        &kp L       &lt 5 SEMICOLON  &kp EQUAL
&kp LSHFT         &kp Z  &kp X         &kp C             &kp V             &kp B                                      &kp N        &kp M  &kp COMMA    &kp PERIOD  &kp SLASH        &kp SINGLE_QUOTE
                         &kp LEFT_ALT  &kp LEFT_COMMAND  &lt 1 LANGUAGE_2  &lt 2 SPACE  &lt 3 LANG1    &kp BACKSPACE  &lt 2 ENTER         &lt 2 TILDE
            >;

            sensor-bindings = <&inc_dec_kp PG_UP PAGE_DOWN>;
        };

        SYMBOL {
            bindings = <
&kp ESC       &kp AMPERSAND    &kp ASTERISK  &trans     &trans                &trans                                   &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp MINUS     &kp PERCENT    &trans
&kp CAPSLOCK  &kp DOLLAR       &kp PERCENT   &kp LCTRL  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS                    &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp PLUS      &kp ASTERISK   &trans
&trans        &kp EXCLAMATION  &kp AT_SIGN   &kp HASH   &kp LEFT_BRACKET      &kp RIGHT_BRACKET                        &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_0  &kp BACKSLASH  &trans
                               &trans        &trans     &trans                &trans                 &trans    &trans  &trans                      &trans
            >;
        };

        NUM {
            bindings = <
&trans            &kp LG(LS(NUMBER_4))  &kp LG(LS(N5))      &trans         &kp F14          &kp F15                               &trans       &kp LEFT_ARROW        &kp UP_ARROW  &kp RIGHT_ARROW        &kp HOME       &kp RG(PLUS)
&kp LEFT_CONTROL  &kp C_VOLUME_DOWN     &kp C_VOLUME_UP     &kp K_MUTE     &kp LC(LS(TAB))  &kp LC(TAB)                           &trans       &mkp MB1              &kp DOWN      &mkp MB2               &kp PAGE_UP    &kp RG(MINUS)
&trans            &kp LC(LEFT)          &kp LC(UP_ARROW)    &kp LC(RIGHT)  &trans           &kp LA(SPACE)                         &trans       &kp RG(LEFT_BRACKET)  &trans        &kp RG(RIGHT_BRACKET)  &kp PAGE_DOWN  &kp RG(N0)
                                        &kp LC(DOWN_ARROW)  &trans         &trans           &trans         &trans    &lt 4 SPACE  &lt 6 SPACE                        &kp END
            >;
        };

        ARROW {
            bindings = <
&trans  &trans             &kp LG(LS(N5))    &kp LG(LS(NUMBER_4))  &kp F14  &kp F15                            &kp LG(LEFT_ARROW)          &kp LEFT                &kp UP_ARROW    &kp RA(RIGHT)            &kp RG(RIGHT_ARROW)          &trans
&trans  &kp C_VOLUME_DOWN  &kp C_VOLUME_UP   &kp K_MUTE            &kp TAB  &kp LS(LC(TAB))                    &kp LC(LS(TAB))             &kp LEFT_ARROW          &kp DOWN_ARROW  &kp RIGHT_ARROW          &kp RC(TAB)                  &trans
&trans  &kp LC(LEFT)       &kp LC(UP_ARROW)  &kp LC(RIGHT)         &trans   &kp LA(SPACE)                      &kp LA(LG(LC(LEFT_ARROW)))  &kp LA(LG(LEFT_ARROW))  &trans          &kp RG(RA(RIGHT_ARROW))  &kp RA(RC(RG(RIGHT_ARROW)))  &trans
                           &trans            &trans                &trans   &trans           &trans    &trans  &trans                                              &kp BACKSPACE
            >;

            sensor-bindings = <&inc_dec_kp LC(PAGE_UP) LC(PAGE_DOWN)>;
        };

        MOUSE {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans          &trans    &trans    &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &msc MOVE_Y(0)  &mkp MB3  &mkp MB2  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                    &trans  &trans          &trans    &trans    &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &trans  &trans                  &trans
            >;
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans                  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans                                    &trans                  &trans  &trans  &trans  &trans  &trans
                &trans  &trans  &trans  &trans  &trans    &lt_to_layer_0 4 SPACE  &lt_to_layer_0 6 SPACE          &trans
            >;
        };

        CONFIG {
            bindings = <
&trans  &bt BT_CLR_ALL  &bt BT_CLR    &trans        &trans        &trans                          &bt BT_CLR    &trans        &trans        &trans        &trans        &trans
&trans  &trans          &trans        &trans        &trans        &trans                          &trans        &trans        &trans        &trans        &trans        &trans
&trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &trans
                        &trans        &trans        &trans        &trans        &trans    &trans  &trans                      &bootloader
            >;
        };
    };
};
